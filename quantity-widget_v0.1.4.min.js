!function(){"use strict";(()=>{const t=[],e=()=>{const t=document.querySelectorAll('input[data-jb-input="quantity"]');0!==t.length?(t.forEach(t=>{a(t)}),u()):console.warn("No quantity inputs found on this page")},a=t=>{const e=t.closest("[data-quantity-container]")||t.parentElement,a=e.querySelector(".addminusbutton.addbutton"),u=e.querySelector(".addminusbutton.minusbutton");if(!a||!u)return void console.error("Could not find add/minus buttons for quantity input:",t);if("true"===t.dataset.quantityInitialized)return;t.dataset.quantityInitialized="true";const o=e=>{const a=t.valueAsNumber||0,u=a+e;if(u>=1){const e=a;t.value=u,t.setAttribute("value",u),t.dispatchEvent(new Event("input",{bubbles:!0})),t.dispatchEvent(new Event("change",{bubbles:!0})),n(u,e,t)}};a.addEventListener("click",t=>{t.preventDefault(),o(1)}),u.addEventListener("click",t=>{t.preventDefault(),o(-1)}),t.addEventListener("input",()=>{const e=t.valueAsNumber,a=parseInt(t.dataset.lastValue)||e;isNaN(e)||e<1?(t.value=1,t.setAttribute("value",1),n(1,a,t)):(t.setAttribute("value",e),n(e,a,t)),t.dataset.lastValue=t.value}),t.dataset.lastValue=t.value||"1"},n=(e,a,n)=>{setTimeout(()=>{t.forEach(t=>{try{t({quantity:e,oldQuantity:a,input:n,container:n.closest("[data-quantity-container]")||n.parentElement})}catch(t){console.error("Error in onQuantityChange callback:",t)}})},0)},u=()=>{const t=document.querySelector("[data-product-name]");if(!t)return void console.log("No product data found, skipping Foxy Cart initialization");const e={name:t.dataset.productName||"",price:parseFloat(t.dataset.productPrice)||0,sku:t.dataset.productSku||"",image:t.dataset.productImage||"",weight:parseFloat(t.dataset.productWeight)||20};console.log("Foxy Cart initialized with product:",e);const a=(t,a)=>{const n=(t=>`https://nextdayreagents.foxycart.com/cart?${new URLSearchParams({name:e.name,price:`${e.price}USD`,code:e.sku,image:e.image,weight:e.weight,quantity:t}).toString()}`)(a);t.href=n,t.dataset.currentQuantity=a},n=document.querySelectorAll('a[data-jb-use-cart="true"]');n.forEach(t=>{if("true"===t.dataset.cartInitialized)return;t.dataset.cartInitialized="true";const e=(t=>{const e=t.dataset.productSku;if(e){const t=document.querySelector(`input[data-jb-input="quantity"][data-product-sku="${e}"]`);if(t)return t}const a=t.closest("[data-quantity-container]");if(a){const t=a.querySelector('input[data-jb-input="quantity"]');if(t)return t}return document.querySelector('input[data-jb-input="quantity"]')})(t);if(e){const n=e.valueAsNumber||1;a(t,n)}else console.warn("No quantity input found for button, using quantity of 1"),a(t,1);t.addEventListener("click",e=>{const a=t.dataset.currentQuantity||1;console.log("Navigating to cart with quantity:",a)})}),window.onQuantityChange(t=>{const e=t.input.dataset.productSku;if(e){const n=document.querySelectorAll(`a[data-jb-use-cart="true"][data-product-sku="${e}"]`);n.forEach(e=>{a(e,t.quantity)}),console.log(`Updated ${n.length} button(s) for SKU: ${e}, Quantity: ${t.quantity}`)}else n.forEach(e=>{a(e,t.quantity)})})};window.onQuantityChange=e=>{"function"==typeof e?t.push(e):console.error("onQuantityChange expects a function as argument")},window.offQuantityChange=e=>{const a=t.indexOf(e);a>-1&&t.splice(a,1)},window.clearQuantityCallbacks=()=>{t.length=0},window.reinitQuantitySelectors=e,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e()})()}();
